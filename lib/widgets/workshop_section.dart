import 'package:flutter/material.dart';
import 'donate_info_page.dart'; // ‚úÖ ab ye file import karni h

class WorkshopSection extends StatelessWidget {
  const WorkshopSection({super.key});

  @override
  Widget build(BuildContext context) {
    final List<String> workshopImages = [
      "assets/workshop/srimad.jpg",
      "assets/workshop/ramayan.jpg",
      "assets/workshop/vedmantr.jpg",
      "assets/workshop/sansbhasa.jpg",
      "assets/workshop/yogdha.jpg",
      "assets/workshop/aayuvond.jpg",
      "assets/workshop/dharmik.jpg",
      "assets/workshop/vedik gadit.jpg",
      "assets/workshop/vedik khagol.jpg",
      "assets/workshop/vedik poojan.jpg",
      "assets/workshop/ved.jpg",
      "assets/workshop/vedang.jpg",
      "assets/workshop/ramcharitmanas.jpg",
    ];

    final List<String> workshopTitles = [
      "‡§∂‡•ç‡§∞‡•Ä‡§Æ‡§¶‡•ç‡§≠‡§ó‡§µ‡§¶ ‡§ó‡•Ä‡§§‡§æ",
      "‡§∞‡§æ‡§Æ‡§æ‡§Ø‡§£ ‡§Ö‡§ß‡•ç‡§Ø‡§Ø‡§®",
      "‡§µ‡•à‡§¶‡§ø‡§ï ‡§Æ‡§Ç‡§§‡•ç‡§∞",
      "‡§∏‡§Ç‡§∏‡•ç‡§ï‡•É‡§§ ‡§≠‡§æ‡§∑‡§æ",
      "‡§Ø‡•ã‡§ó ‡§∏‡§æ‡§ß‡§®‡§æ",
      "‡§Ü‡§Ø‡•Å‡§∞‡•ç‡§µ‡•á‡§¶ ‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§®",
      "‡§ß‡§æ‡§∞‡•ç‡§Æ‡§ø‡§ï ‡§Ö‡§®‡•Å‡§∑‡•ç‡§†‡§æ‡§®",
      "‡§µ‡•à‡§¶‡§ø‡§ï ‡§ó‡§£‡§ø‡§§",
      "‡§µ‡•à‡§¶‡§ø‡§ï ‡§ñ‡§ó‡•ã‡§≤",
      "‡§µ‡•à‡§¶‡§ø‡§ï ‡§™‡•Ç‡§ú‡§® ‡§µ‡§ø‡§ß‡§ø",
      "‡§µ‡•á‡§¶ ‡§Ö‡§ß‡•ç‡§Ø‡§Ø‡§®",
      "‡§µ‡•á‡§¶‡§æ‡§Ç‡§ó ‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ",
      "‡§∂‡•ç‡§∞‡•Ä ‡§∞‡§æ‡§Æ ‡§ö‡§∞‡§ø‡§§ ‡§Æ‡§æ‡§®‡§∏ ‡§Ö‡§ß‡•ç‡§Ø‡§Ø‡§®",
    ];

    final List<String> workshopDescriptions = [
      "‡§ú‡•Ä‡§µ‡§® ‡§ï‡•á ‡§Æ‡§æ‡§∞‡•ç‡§ó‡§¶‡§∞‡•ç‡§∂‡§® ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ó‡•Ä‡§§‡§æ ‡§ï‡•á ‡§∂‡•ç‡§≤‡•ã‡§ï‡•ã‡§Ç ‡§ï‡§æ ‡§Ö‡§ß‡•ç‡§Ø‡§Ø‡§®",
      "‡§∂‡•ç‡§∞‡•Ä ‡§∞‡§æ‡§Æ ‡§ï‡•á ‡§Ü‡§¶‡§∞‡•ç‡§∂‡•ã‡§Ç ‡§î‡§∞ ‡§ú‡•Ä‡§µ‡§® ‡§Æ‡•Ç‡§≤‡•ç‡§Ø‡•ã‡§Ç ‡§ï‡•Ä ‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ",
      "‡§µ‡•à‡§¶‡§ø‡§ï ‡§Æ‡§Ç‡§§‡•ç‡§∞‡•ã‡§Ç ‡§ï‡§æ ‡§â‡§ö‡•ç‡§ö‡§æ‡§∞‡§£ ‡§î‡§∞ ‡§Ö‡§∞‡•ç‡§• ‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä",
      "‡§¶‡•á‡§µ‡§≠‡§æ‡§∑‡§æ ‡§∏‡§Ç‡§∏‡•ç‡§ï‡•É‡§§ ‡§ï‡•á ‡§Æ‡•Ç‡§≤‡§≠‡•Ç‡§§ ‡§∏‡§ø‡§¶‡•ç‡§ß‡§æ‡§Ç‡§§‡•ã‡§Ç ‡§ï‡•Ä ‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ",
      "‡§∂‡§æ‡§∞‡•Ä‡§∞‡§ø‡§ï ‡§î‡§∞ ‡§Æ‡§æ‡§®‡§∏‡§ø‡§ï ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ø‡•ã‡§ó ‡§™‡•ç‡§∞‡§∂‡§ø‡§ï‡•ç‡§∑‡§£",
      "‡§™‡•ç‡§∞‡§æ‡§ï‡•É‡§§‡§ø‡§ï ‡§ö‡§ø‡§ï‡§ø‡§§‡•ç‡§∏‡§æ ‡§î‡§∞ ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§ï‡•Ä ‡§™‡§æ‡§∞‡§Ç‡§™‡§∞‡§ø‡§ï ‡§™‡§¶‡•ç‡§ß‡§§‡§ø",
      "‡§ú‡•Ä‡§µ‡§® ‡§ï‡•á ‡§µ‡§ø‡§≠‡§ø‡§®‡•ç‡§® ‡§∏‡§Ç‡§∏‡•ç‡§ï‡§æ‡§∞‡•ã‡§Ç ‡§ï‡•Ä ‡§µ‡§ø‡§ß‡§ø ‡§î‡§∞ ‡§Æ‡§π‡§§‡•ç‡§µ",
      "‡§™‡•ç‡§∞‡§æ‡§ö‡•Ä‡§® ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§ó‡§£‡§®‡§æ ‡§µ‡§ø‡§ß‡§ø‡§Ø‡•ã‡§Ç ‡§™‡§∞ ‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§ ‡§§‡•á‡§ú‡§º, ‡§∏‡§π‡§ú ‡§î‡§∞ ‡§Æ‡§æ‡§®‡§∏‡§ø‡§ï ‡§ó‡§£‡§®‡§æ ‡§ï‡•Ä ‡§™‡•ç‡§∞‡§£‡§æ‡§≤‡•Ä",
      "‡§Ø‡§π ‡§™‡•ç‡§∞‡§æ‡§ö‡•Ä‡§® ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§ú‡•ç‡§Ø‡•ã‡§§‡§ø‡§∑ ‡§î‡§∞ ‡§ñ‡§ó‡•ã‡§≤‡§∂‡§æ‡§∏‡•ç‡§§‡•ç‡§∞ ‡§ï‡•Ä ‡§µ‡§π ‡§µ‡§ø‡§¶‡•ç‡§Ø‡§æ ‡§π‡•à ‡§ú‡•ã ‡§µ‡•á‡§¶‡•ã‡§Ç ‡§™‡§∞ ‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§ ‡§π‡•à‡•§",
      "‡§µ‡•á‡§¶‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§µ‡§∞‡•ç‡§£‡§ø‡§§ ‡§∂‡•Å‡§¶‡•ç‡§ß ‡§î‡§∞ ‡§µ‡•à‡§ú‡•ç‡§û‡§æ‡§®‡§ø‡§ï ‡§µ‡§ø‡§ß‡§ø‡§Ø‡•ã‡§Ç ‡§∏‡•á ‡§ï‡•Ä ‡§ú‡§æ‡§®‡•á ‡§µ‡§æ‡§≤‡•Ä ‡§™‡•Ç‡§ú‡§æ ‡§™‡•ç‡§∞‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ‡•§",
      "‡§π‡§ø‡§Ç‡§¶‡•Ç ‡§ß‡§∞‡•ç‡§Æ ‡§ï‡•á ‡§Æ‡•Ç‡§≤ ‡§î‡§∞ ‡§∏‡§∞‡•ç‡§µ‡•ã‡§ö‡•ç‡§ö ‡§ó‡•ç‡§∞‡§Ç‡§•, ‡§ú‡•ã ‡§ú‡•ç‡§û‡§æ‡§®, ‡§ï‡§∞‡•ç‡§Æ ‡§î‡§∞ ‡§â‡§™‡§æ‡§∏‡§®‡§æ ‡§ï‡•á ‡§Ü‡§ß‡§æ‡§∞ ‡§π‡•à‡§Ç‡•§",
      "‡§µ‡•á‡§¶‡•ã‡§Ç ‡§ï‡•ã ‡§∏‡§Æ‡§ù‡§®‡•á ‡§î‡§∞ ‡§â‡§®‡§ï‡•á ‡§™‡•ç‡§∞‡§Ø‡•ã‡§ó ‡§Æ‡•á‡§Ç ‡§∏‡§π‡§æ‡§Ø‡§ï ‡§õ‡§π ‡§Ö‡§Ç‡§ó ‡§µ‡§ø‡§¶‡•ç‡§Ø‡§æ, ‡§ú‡•à‡§∏‡•á ‡§µ‡•ç‡§Ø‡§æ‡§ï‡§∞‡§£, ‡§õ‡§Ç‡§¶, ‡§ú‡•ç‡§Ø‡•ã‡§§‡§ø‡§∑ ‡§Ü‡§¶‡§ø‡•§",
      "‡§ó‡•ã‡§∏‡•ç‡§µ‡§æ‡§Æ‡•Ä ‡§§‡•Å‡§≤‡§∏‡•Ä‡§¶‡§æ‡§∏ ‡§¶‡•ç‡§µ‡§æ‡§∞‡§æ ‡§∞‡§ö‡§ø‡§§ ‡§∞‡§æ‡§Æ‡§æ‡§Ø‡§£ ‡§ï‡§æ ‡§≠‡§æ‡§µ‡§®‡§æ‡§§‡•ç‡§Æ‡§ï ‡§î‡§∞ ‡§Ü‡§ß‡•ç‡§Ø‡§æ‡§§‡•ç‡§Æ‡§ø‡§ï ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§Ö‡§ß‡•ç‡§Ø‡§Ø‡§®‡•§",
    ];

    return Container(
      width: double.infinity,
      color: const Color(0xFFEFFFEF),
      padding: const EdgeInsets.symmetric(vertical: 40, horizontal: 20),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.center,
        children: [
          const Text(
            "üåø ‡§∏‡§®‡§æ‡§§‡§® ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§∂‡§æ‡§≤‡§æ",
            style: TextStyle(
              fontSize: 32,
              fontWeight: FontWeight.bold,
              color: Colors.green,
            ),
          ),
          const SizedBox(height: 30),

          // üîπ Grid
          Center(
            child: Wrap(
              spacing: 20,
              runSpacing: 20,
              alignment: WrapAlignment.center,
              children: List.generate(workshopImages.length, (index) {
                return WorkshopCard(
                  imagePath: workshopImages[index],
                  title: workshopTitles[index],
                  description: workshopDescriptions[index],
                  onTap: () {
                    // ‚úÖ ab ye DonateInfoPage kholega
                    Navigator.push(
                      context,
                      MaterialPageRoute(
                        builder: (context) => const DonateInfoPage(),
                      ),
                    );
                  },
                );
              }),
            ),
          ),
        ],
      ),
    );
  }
}

class WorkshopCard extends StatefulWidget {
  final String imagePath;
  final String title;
  final String description;
  final VoidCallback onTap;

  const WorkshopCard({
    super.key,
    required this.imagePath,
    required this.title,
    required this.description,
    required this.onTap,
  });

  @override
  State<WorkshopCard> createState() => _WorkshopCardState();
}

class _WorkshopCardState extends State<WorkshopCard> {
  bool isHovered = false;
  bool isButtonHovered = false;

  @override
  Widget build(BuildContext context) {
    return MouseRegion(
      onEnter: (_) => setState(() => isHovered = true),
      onExit: (_) => setState(() => isHovered = false),
      child: AnimatedScale(
        scale: isHovered ? 1.05 : 1.0,
        duration: const Duration(milliseconds: 200),
        child: AnimatedContainer(
          duration: const Duration(milliseconds: 200),
          width: 280,
          decoration: BoxDecoration(
            color: isHovered ? Colors.green.shade50 : Colors.white,
            borderRadius: BorderRadius.circular(12),
            border: Border.all(color: Colors.green.shade200),
            boxShadow: [
              BoxShadow(
                color: isHovered
                    ? Colors.green.withOpacity(0.3)
                    : Colors.black.withOpacity(0.12),
                blurRadius: isHovered ? 12 : 8,
                offset: const Offset(2, 4),
              ),
            ],
          ),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.center,
            children: [
              ClipRRect(
                borderRadius: const BorderRadius.only(
                  topLeft: Radius.circular(12),
                  topRight: Radius.circular(12),
                ),
                child: Image.asset(
                  widget.imagePath,
                  height: 120,
                  width: double.infinity,
                  fit: BoxFit.cover,
                ),
              ),
              const SizedBox(height: 12),
              Text(
                widget.title,
                style: const TextStyle(
                  fontSize: 18,
                  fontWeight: FontWeight.bold,
                  color: Colors.black87,
                ),
                textAlign: TextAlign.center,
              ),
              const SizedBox(height: 8),
              Padding(
                padding: const EdgeInsets.symmetric(horizontal: 12),
                child: Text(
                  widget.description,
                  style: const TextStyle(fontSize: 14, color: Colors.black54),
                  textAlign: TextAlign.center,
                ),
              ),
              const SizedBox(height: 12),
              MouseRegion(
                onEnter: (_) => setState(() => isButtonHovered = true),
                onExit: (_) => setState(() => isButtonHovered = false),
                child: Padding(
                  padding: const EdgeInsets.only(bottom: 16),
                  child: ElevatedButton(
                    onPressed: widget.onTap,
                    style: ElevatedButton.styleFrom(
                      backgroundColor: isButtonHovered
                          ? Colors.green.shade700
                          : Colors.green,
                      padding: const EdgeInsets.symmetric(
                        horizontal: 20,
                        vertical: 10,
                      ),
                      shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(8),
                      ),
                    ),
                    child: const Text(
                      "‡§ï‡§æ‡§∞‡•ç‡§Ø‡§∂‡§æ‡§≤‡§æ ‡§Æ‡•á‡§Ç ‡§≠‡§æ‡§ó ‡§≤‡•á‡§Ç",
                      style: TextStyle(color: Colors.white, fontSize: 14),
                    ),
                  ),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
