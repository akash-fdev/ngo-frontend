import 'package:flutter/material.dart';
import 'package:carousel_slider/carousel_slider.dart' as cs;

class GallerySection extends StatefulWidget {
  const GallerySection({super.key});

  @override
  State<GallerySection> createState() => _GallerySectionState();
}

class _GallerySectionState extends State<GallerySection> {
  int _current = 0;

  final List<Map<String, String>> galleryItems = [
    {
      "image": "assets/gallery/image1.jpg",
      "caption": "‡§∞‡§Ç‡§ó‡•ã‡§§‡•ç‡§∏‡§µ ‡§π‡•ã‡§≤‡•Ä ‡§ï‡§æ ‡§Ü‡§Ø‡•ã‡§ú‡§® ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ",
    },
    {
      "image": "assets/gallery/image2.jpg",
      "caption": "‡§¶‡•Å‡§∞‡•ç‡§¨‡§≤ ‡§µ‡§∞‡•ç‡§ó ‡§ï‡•ã ‡§™‡•Å‡§∏‡•ç‡§§‡§ï‡•ã‡§Ç ‡§ï‡§æ ‡§µ‡§ø‡§§‡§∞‡§£",
    },
    {
      "image": "assets/gallery/image3.jpg",
      "caption": "‡§¶‡•Å‡§∞‡•ç‡§¨‡§≤ ‡§µ‡§∞‡•ç‡§ó ‡§ï‡•Ä ‡§¨‡§ö‡•ç‡§ö‡•ã‡§Ç ‡§ï‡•ã ‡§™‡•Å‡§∏‡•ç‡§§‡§ï‡•ã‡§Ç ‡§ï‡§æ ‡§µ‡§ø‡§§‡§∞‡§£",
    },
    {
      "image": "assets/gallery/image4.jpg",
      "caption": "‡§∞‡§æ‡§Æ‡§æ‡§Ø‡§£ ‡§µ‡•à‡§¶‡§ø‡§ï ‡§è‡§ú‡•Å‡§ï‡•á‡§∂‡§® ‡§´‡§æ‡§â‡§Ç‡§°‡•á‡§∂‡§® ‡§ï‡§æ ‡§®‡§ø‡§ú ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§∂‡§æ‡§≤‡§æ ‡§è‡§µ‡§Ç ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§æ‡§≤‡§Ø ‡§®‡§ø‡§∞‡•ç‡§Æ‡§æ‡§£",
    },
    {"image": "assets/gallery/image5.jpg", "caption": "‡§µ‡•à‡§¶‡§ø‡§ï ‡§ñ‡§ó‡•ã‡§≤ ‡§Ø‡§Ç‡§§‡•ç‡§∞ ‡§™‡•Ç‡§ú‡§®"},
    {"image": "assets/gallery/image6.jpg", "caption": "‡§µ‡•á‡§¶ ‡§Æ‡§æ‡§§‡§æ ‡§ó‡§æ‡§Ø‡§§‡•ç‡§∞‡•Ä ‡§™‡•Ç‡§ú‡§® ‡§ó‡§æ‡§Ø‡§§‡•ç‡§∞‡•Ä ‡§ú‡§Ø‡§Ç‡§§‡•Ä ‡§™‡§∞ ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§Ü‡§Ø‡•ã‡§ú‡§ø‡§§"},
    {"image": "assets/gallery/image7.jpg", "caption": "‡§ï‡§Ç‡§µ‡§∞ ‡§Æ‡•á‡§Ç ‡§∂‡§ø‡§µ ‡§≠‡§ï‡•ç‡§§‡•ã‡§Ç ‡§®‡•á ‡§∞‡§æ‡§Æ‡§æ‡§Ø‡§£ ‡§µ‡•à‡§¶‡§ø‡§ï ‡§è‡§ú‡•Å‡§ï‡•á‡§∂‡§® ‡§´‡§æ‡§â‡§Ç‡§°‡•á‡§∂‡§® ‡§™‡§∞‡§ø‡§µ‡§æ‡§∞ ‡§¶‡•ç‡§µ‡§æ‡§∞‡§æ ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§æ‡§≤‡§Ø ‡§™‡§∞‡§ø‡§∏‡§∞ ‡§Æ‡•á‡§Ç ‡§∞‡•Å‡§ï‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§µ‡§ø‡§¶‡•ç‡§Ø‡•Å‡§§ ‡§î‡§∞ ‡§ú‡§≤ ‡§ï‡•Ä ‡§µ‡•ç‡§Ø‡§µ‡§∏‡•ç‡§•‡§æ ‡§ï‡•Ä ‡§ó‡§à"},
    {"image": "assets/gallery/image8.jpg", "caption": "‡§ó‡•å ‡§∏‡•á‡§µ‡§æ ‡§ï‡•ã ‡§ó‡§†‡§ø‡§§ ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡§æ‡§∞‡§£‡•Ä ‡§¶‡•ç‡§µ‡§æ‡§∞‡§æ ‡§∏‡•ç‡§µ‡§ö‡•ç‡§õ ‡§™‡•á‡§Ø‡§ú‡§≤ ‡§ï‡•Ä ‡§µ‡•ç‡§Ø‡§µ‡§∏‡•ç‡§•‡§æ ‡§ï‡§∞‡§®‡§æ ‡§ò‡•ã‡§∑‡§ø‡§§ ‡§π‡•Å‡§Ü"},
    {"image": "assets/gallery/image9.jpg", "caption": "‡§Ø‡§ú‡•ç‡§û ‡§ï‡§æ ‡§Ü‡§Ø‡•ã‡§ú‡§® ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§ú‡§ø‡§∏‡§Æ‡•á ‡§∂‡•ç‡§∞‡•Ä ‡§∞‡§æ‡§Æ‡§æ‡§Ø‡§£ ‡§µ‡•à‡§¶‡§ø‡§ï ‡§è‡§ú‡•Å‡§ï‡•á‡§∂‡§® ‡§´‡§æ‡§â‡§Ç‡§°‡•á‡§∂‡§® ‡§™‡§∞‡§ø‡§µ‡§æ‡§∞ ‡§¶‡•ç‡§µ‡§æ‡§∞‡§æ ‡§∏‡§ï‡•ç‡§∞‡§ø‡§Ø ‡§≠‡§æ‡§ó ‡§≤‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ"},
    {"image": "assets/gallery/image10.jpg", "caption": "‡§∞‡§æ‡§Æ‡§æ‡§Ø‡§£ ‡§µ‡•à‡§¶‡§ø‡§ï ‡§è‡§ú‡•Å‡§ï‡•á‡§∂‡§® ‡§´‡§æ‡§â‡§Ç‡§°‡•á‡§∂‡§® ‡§™‡§∞‡§ø‡§µ‡§æ‡§∞ ‡§¶‡•ç‡§µ‡§æ‡§∞‡§æ ‡§Ü‡§Ø‡•ã‡§ú‡§ø‡§§ ‡§õ‡§ü‡•Ä ‡§ï‡§æ ‡§∂‡•ç‡§∞‡•É‡§Ç‡§ó‡§æ‡§§‡•ç‡§Æ‡§ø‡§ï ‡§∏‡•ç‡§µ‡§∞‡•Ç‡§™ ‡§ï‡•á ‡§¶‡§∞‡•ç‡§∂‡§® ‡§∂‡•ç‡§∞‡•Ä‡§Æ‡§§‡•Ä ‡§∞‡§Æ‡§æ ‡§∞‡§æ‡§ò‡§µ‡•á‡§®‡•ç‡§¶‡•ç‡§∞ ‡§ú‡•Ä ‡§¶‡•ç‡§µ‡§æ‡§∞‡§æ ‡§Ü‡§Ø‡•ã‡§ú‡§ø‡§§ ‡§è‡§µ‡§Ç ‡§∏‡§Ç‡§ö‡§æ‡§≤‡§® ‡§∏‡§Ç‡§™‡§®‡•ç‡§® ‡§π‡•Å"},
    {"image": "assets/gallery/image11.jpg", "caption": "‡§Ü‡§π‡•Å‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•á ‡§∏‡§æ‡§• ‡§Ü‡§∞‡§Æ‡•ç‡§≠ ‡§π‡•Å‡§Ü ‡§Ø‡§ú‡•ç‡§û ‡§ú‡§ø‡§∏‡§Æ‡•á‡§Ç ‡§∂‡•ç‡§∞‡•Ä ‡§∞‡§æ‡§Æ‡§æ‡§Ø‡§£ ‡§µ‡•à‡§¶‡§ø‡§ï ‡§è‡§ú‡•Å‡§ï‡•á‡§∂‡§® ‡§´‡§æ‡§â‡§Ç‡§°‡•á‡§∂‡§® ‡§™‡§∞‡§ø‡§µ‡§æ‡§∞ ‡§¶‡•ç‡§µ‡§æ‡§∞‡§æ ‡§∏‡§ï‡•ç‡§∞‡§ø‡§Ø ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§≠‡§æ‡§ó ‡§≤‡§ø‡§Ø‡§æ ‡§π‡•à‡§Ç"},
    {"image": "assets/gallery/image12.jpg", "caption": "‡§∏‡§Ç‡§∏‡•ç‡§•‡§æ‡§® ‡§ï‡•Ä ‡§®‡§ø‡§∞‡•ç‡§Æ‡§æ‡§£ ‡§ï‡•á ‡§∏‡§Æ‡§Ø ‡§ï‡§æ ‡§ö‡§ø‡§§‡•ç‡§∞"},
    {"image": "assets/gallery/image13.jpg", "caption": "‡§∏‡§Ç‡§∏‡•ç‡§•‡§æ‡§® ‡§ï‡•Ä ‡§®‡§ø‡§∞‡•ç‡§Æ‡§æ‡§£ ‡§ï‡•á ‡§∏‡§Æ‡§Ø ‡§ï‡§æ ‡§ö‡§ø‡§§‡•ç‡§∞"},
    {"image": "assets/gallery/image14.jpg", "caption": "‡§ï‡§æ‡§µ‡§°‡§º‡§ø‡§Ø‡§æ ‡§∂‡•ç‡§∞‡•Ä ‡§∂‡§ø‡§µ‡§ú‡•Ä ‡§ï‡•á ‡§¶‡§∞‡•ç‡§∂‡§® ‡§Ø‡•ã‡§ó‡•Ä ‡§∞‡§æ‡§Æ‡§æ‡§Ø‡§£ ‡§µ‡•à‡§¶‡§ø‡§ï ‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ ‡§¶‡•ç‡§µ‡§æ‡§∞ ‡§∞‡§æ‡§§‡•ç‡§∞‡§ø ‡§™‡•ç‡§∞‡§¨‡•ã‡§ß‡§® ‡§ï‡§∞ ‡§¶‡•á"},
  ];

  @override
  Widget build(BuildContext context) {
    return Container(
      width: double.infinity,
      color: Colors.pink.shade50,
      padding: const EdgeInsets.symmetric(vertical: 40, horizontal: 20),
      alignment: Alignment.center,
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.center,
        children: [
          const Text(
            "üì∏ ‡§ö‡§ø‡§§‡•ç‡§∞‡§Æ‡§æ‡§≤‡§æ",
            style: TextStyle(
              fontSize: 32,
              fontWeight: FontWeight.bold,
              color: Colors.green,
            ),
          ),
          const SizedBox(height: 8),
          const Text(
            "‡§π‡§Æ‡§æ‡§∞‡•á ‡§´‡§æ‡§â‡§Ç‡§°‡•á‡§∂‡§® ‡§ï‡•Ä ‡§ù‡§≤‡§ï‡§ø‡§Ø‡§æ‡§Ç ‡§î‡§∞ ‡§™‡§µ‡§ø‡§§‡•ç‡§∞ ‡§ï‡•ç‡§∑‡§£",
            style: TextStyle(fontSize: 16, color: Colors.black54),
            textAlign: TextAlign.center,
          ),
          const SizedBox(height: 30),

          // üîπ Main Carousel with captions
          cs.CarouselSlider(
            items: galleryItems.map((item) {
              return Stack(
                children: [
                  ClipRRect(
                    borderRadius: BorderRadius.circular(16),
                    child: Image.asset(
                      item["image"]!,
                      fit: BoxFit.cover,
                      width: double.infinity,
                    ),
                  ),
                  Positioned(
                    bottom: 10,
                    left: 10,
                    right: 10,
                    child: Container(
                      padding: const EdgeInsets.all(8),
                      decoration: BoxDecoration(
                        color: Colors.black54,
                        borderRadius: BorderRadius.circular(8),
                      ),
                      child: Text(
                        item["caption"]!,
                        style: const TextStyle(
                          color: Colors.white,
                          fontSize: 16,
                          fontWeight: FontWeight.w500,
                        ),
                        textAlign: TextAlign.center,
                      ),
                    ),
                  ),
                ],
              );
            }).toList(),
            options: cs.CarouselOptions(
              height: 400,
              autoPlay: true,
              enlargeCenterPage: true,
              onPageChanged: (index, reason) {
                setState(() {
                  _current = index;
                });
              },
            ),
          ),

          const SizedBox(height: 16),

          // üîπ Scrollable Thumbnails (ListView.builder)
          SizedBox(
            height: 100,
            child: ListView.builder(
              scrollDirection: Axis.horizontal,
              itemCount: galleryItems.length,
              itemBuilder: (context, index) {
                return GestureDetector(
                  onTap: () {
                    setState(() {
                      _current = index;
                    });
                  },
                  child: Container(
                    margin: const EdgeInsets.symmetric(horizontal: 6),
                    padding: const EdgeInsets.all(2),
                    decoration: BoxDecoration(
                      border: Border.all(
                        color: _current == index
                            ? Colors.green
                            : Colors.transparent,
                        width: 2,
                      ),
                      borderRadius: BorderRadius.circular(8),
                    ),
                    child: ClipRRect(
                      borderRadius: BorderRadius.circular(8),
                      child: Image.asset(
                        galleryItems[index]["image"]!,
                        height: 80,
                        width: 110,
                        fit: BoxFit.cover,
                      ),
                    ),
                  ),
                );
              },
            ),
          ),
        ],
      ),
    );
  }
}
